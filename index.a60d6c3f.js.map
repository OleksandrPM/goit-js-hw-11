{"mappings":"YAEA,IAGMA,EAHW,2BAGXA,EAFU,qCAEVA,EAGD,SAAuBC,GACxB,OAAOA,C,EAJLD,EAMQ,QANRA,EAOS,aAPTA,GAQQ,ECVd,IDaqBC,EACbC,GADaD,ECDT,UDEJC,EAUR,SAAuBD,GACrB,IAAiBE,EACfH,EADoBI,EACpBJ,EADuBK,EACvBL,EADmCM,EACnCN,EADgDO,EAChDP,EAEF,MAAO,GAAkBQ,OAFvBR,EAEgB,SAAgBQ,OAATL,EAAI,OAEbK,OAFkBJ,EAChCH,GACA,gBAAwCO,OAA1BH,EAAW,iBAAyCG,OAA1BF,EAAY,gBAAyBE,OAAXD,E,CAhBnDE,CAAcR,GAExBS,MAAMR,GAAUS,MAAK,SAAAC,GAC1B,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,M,KCRGL,MAAK,SAAAM,GAC1BC,QAAQC,IAAIF,EAAOG,UAAWH,EAAOI,M","sources":["src/fetchImages.js","src/index.js"],"sourcesContent":["export { fetchImages };\n\nconst BASE_URL = 'https://pixabay.com/api/';\nconst API_KEY = '34821763-cd0390e9b5fa3f24bbb43d369';\n\nconst requestParameters = {\n  baseUrl: BASE_URL,\n  key: API_KEY,\n  q: function getSearchTerm(searchTerm) {\n    return searchTerm;\n  },\n  image_type: 'photo',\n  orientation: 'horizontal',\n  safesearch: true,\n};\n\nfunction fetchImages(searchTerm) {\n  const fetchUrl = buildFetchUrl(searchTerm);\n\n  return fetch(fetchUrl).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n}\n\nfunction buildFetchUrl(searchTerm) {\n  const { baseUrl, key, q, image_type, orientation, safesearch } =\n    requestParameters;\n\n  return `${baseUrl}?key=${key}&q=${q(\n    searchTerm\n  )}&image_type=${image_type}&orientation=${orientation}&safesearch=${safesearch}`;\n}\n","import './css/styles.css';\nimport { fetchImages } from './fetchImages';\n\nconst messadges = {\n  emptyArrayMessadge:\n    'Sorry, there are no images matching your search query. Please try again.',\n  endCollectionMessadge:\n    \"We're sorry, but you've reached the end of search results.\",\n\n  totalHitsMessadge: function getTotalHitsMessadge(totalHits) {\n    return `Hooray! We found ${totalHits} images.`;\n  },\n};\n\n//delete\nfetchImages('flowers').then(images => {\n  console.log(images.totalHits, images.total);\n  // if (countries.length === 1) {\n  //   renderCountryInfo(countries, cardStylesProperties.svgHeight);\n  //   styleCountryCard(countryInfoEl, cardStylesProperties);\n  // } else if (countries.length > 1 && countries.length <= 10) {\n  //   renderCountryList(countries, listStylesProperties.svgHeight);\n  //   styleCountryList(countryListEl, listStylesProperties);\n  // } else {\n  //   Notify.info(toMuchMessage);\n  // }\n});\n"],"names":["$a2669c5a2db7a816$var$requestParameters","searchTerm","fetchUrl","key","q","image_type","orientation","safesearch","concat","$a2669c5a2db7a816$var$buildFetchUrl","fetch","then","response","ok","Error","status","json","images","console","log","totalHits","total"],"version":3,"file":"index.a60d6c3f.js.map"}